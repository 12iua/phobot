architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    developmentFabric.extendsFrom common
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

dependencies {
    if (rootProject.use_pb_client == 'true') {
        runtimeOnly "me.earth.pingbypass:pb-client-fabric:$rootProject.pb_version"
    }

    if (rootProject.use_pb_server == 'true') {
        runtimeOnly "me.earth.pingbypass:pb-server-fabric:$rootProject.pb_version"
    }

    // change this to run against pingbypass server/client
    // runtimeOnly "me.earth.pingbypass:pb-server-fabric:$rootProject.pb_version"
    runtimeOnly "me.earth.pingbypass:pb-client-fabric:$rootProject.pb_version"


    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_version"
    common "me.earth.pingbypass:pb-api:$rootProject.pb_version"
    common project(path: ':', configuration: 'namedElements')
    jarLibs(project(path: ':', configuration: 'transformProductionFabric'))
}
